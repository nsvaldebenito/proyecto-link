{"version":3,"file":"omnichannel2-commercial-plataform-wallet-management-front-common.js","sources":["ng://@omnichannel2-commercial-plataform-wallet-management/front-common/lib/business-api/interceptors/endpoint-resolver.interceptor.ts","ng://@omnichannel2-commercial-plataform-wallet-management/front-common/lib/business-api/interceptors/error-handler.interceptor.ts","ng://@omnichannel2-commercial-plataform-wallet-management/front-common/lib/business-api/interceptors/backend-headers.interceptor.ts","ng://@omnichannel2-commercial-plataform-wallet-management/front-common/lib/business-api/interceptors/providers.ts","ng://@omnichannel2-commercial-plataform-wallet-management/front-common/lib/business-api/business-api.module.ts","ng://@omnichannel2-commercial-plataform-wallet-management/front-common/lib/business-api/token/token.service.ts","ng://@omnichannel2-commercial-plataform-wallet-management/front-common/lib/token-material.module.ts","ng://@omnichannel2-commercial-plataform-wallet-management/front-common/lib/components/token-table/token-table.component.html","ng://@omnichannel2-commercial-plataform-wallet-management/front-common/lib/components/token-table/token-table.component.ts","ng://@omnichannel2-commercial-plataform-wallet-management/front-common/lib/front-common.module.ts","ng://@omnichannel2-commercial-plataform-wallet-management/front-common/lib/models/token.ts","ng://@omnichannel2-commercial-plataform-wallet-management/front-common/omnichannel2-commercial-plataform-wallet-management-front-common.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { WalletManagementConfig } from '@omnichannel2-commercial-plataform-wallet-management/front-common/config';\r\n\r\n@Injectable()\r\nexport class EndpointResolverInterceptor implements HttpInterceptor {\r\n\r\n\tconstructor(private config: WalletManagementConfig) {}\r\n\r\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\t\treturn next.handle(req.clone({\r\n      url: `${ this.config.apiDomain }/omnichannel2/wallet-management${ req.url }`\r\n\t\t}));\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { iif, Observable, of, throwError } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\nimport { Response } from '../../models';\r\n\r\n\r\n@Injectable()\r\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\r\n\r\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\t\treturn next.handle(req).pipe(\r\n\t\t\tmergeMap(event => iif(\r\n\t\t\t\t() => event instanceof HttpResponse,\r\n\t\t\t\tof(event as HttpResponse<Response<any>>).pipe(\r\n\t\t\t\t\tmergeMap(response =>\r\n\t\t\t\t\t\tresponse.body?.code === 'ok' && response.body?.message?.responseCode === 'OK' ?\r\n\t\t\t\t\t\t\tof(response) : throwError(response.body?.message.respuesta))\r\n\t\t\t\t),\r\n\t\t\t\tof(event)\r\n\t\t\t))\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class BackendHeadersInterceptor implements HttpInterceptor {\r\n\r\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\t\treturn next.handle(req.clone({\r\n\t\t\tsetHeaders: this.buildHeaders()\r\n\t\t}));\r\n\t}\r\n\r\n\tbuildHeaders = () => {\r\n\t\tlet headers: any = {};\r\n\t\theaders.version = '1.0';\r\n\t\theaders.country = 'CL';\r\n\t\theaders.commerce = 'Banco';\r\n\t\theaders.channel = 'Web';\r\n\t\tif (sessionStorage.getItem('executiveCode')) {\r\n\t\t\theaders.executiveCode = sessionStorage.getItem('executiveCode');\r\n\t\t}\r\n\t\tif (sessionStorage.getItem('access_token')) {\r\n\t\t\theaders.Authorization = 'Bearer ' + sessionStorage.getItem('access_token');\r\n\t\t}\r\n\t\tif (sessionStorage.getItem('officeId')) {\r\n\t\t\theaders.sucursal = sessionStorage.getItem('officeId');\r\n\t\t}\r\n\t\tif (sessionStorage.getItem('username')) {\r\n\t\t\theaders.usuario = sessionStorage.getItem('username');\r\n\t\t}\r\n\t\treturn headers;\r\n\t}\r\n}\r\n","import { InjectionToken, Provider } from '@angular/core';\r\nimport { HttpInterceptor } from '@angular/common/http';\r\n\r\nimport { EndpointResolverInterceptor } from './endpoint-resolver.interceptor';\r\nimport { ErrorHandlerInterceptor } from './error-handler.interceptor';\r\nimport { BackendHeadersInterceptor } from './backend-headers.interceptor';\r\n\r\n\r\nexport const HTTP_INTERCEPTORS = new InjectionToken<HttpInterceptor[]>('HTTP_INTERCEPTORS');\r\n\r\n\r\nexport const INTERCEPTORS_PROVIDERS: Provider[] = [{\r\n\tprovide: HTTP_INTERCEPTORS,\r\n\tmulti: true,\r\n\tuseClass: EndpointResolverInterceptor\r\n}, {\r\n\tprovide: HTTP_INTERCEPTORS,\r\n\tmulti: true,\r\n\tuseClass: BackendHeadersInterceptor\r\n}, {\r\n\tprovide: HTTP_INTERCEPTORS,\r\n\tmulti: true,\r\n\tuseClass: ErrorHandlerInterceptor\r\n}];\r\n","import { Injector, NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS as BASE_HTTP_INTERCEPTORS, HttpClient, HttpHandler, ɵHttpInterceptingHandler } from '@angular/common/http';\r\n\r\nimport { HTTP_INTERCEPTORS, INTERCEPTORS_PROVIDERS } from './interceptors/providers';\r\n\r\n\r\n@NgModule({\r\n\tproviders: [{\r\n\t\tprovide: HttpClient,\r\n\t\tuseClass: HttpClient\r\n\t}, {\r\n\t\tprovide: HttpHandler,\r\n\t\tuseClass: ɵHttpInterceptingHandler\r\n\t}, {\r\n\t\tprovide: BASE_HTTP_INTERCEPTORS,\r\n\t\tdeps: [Injector, HTTP_INTERCEPTORS],\r\n\t\tuseFactory: (injector, interceptors) => [\r\n\t\t\t...interceptors,\r\n\t\t\t...injector.parent.get(BASE_HTTP_INTERCEPTORS)\r\n\t\t]\r\n\t},\r\n\t...INTERCEPTORS_PROVIDERS\r\n\t]\r\n})\r\nexport class BusinessApiModule { }\r\n","import { Observable, throwError } from 'rxjs';\n\nimport { BusinessApiModule } from '../business-api.module';\nimport { HttpClient } from '@angular/common/http';\nimport { IToken } from '../../models/token';\nimport { Injectable } from '@angular/core';\nimport { WalletManagementConfig } from '@omnichannel2-commercial-plataform-wallet-management/front-common/config';\nimport { of } from 'rxjs';\n\nexport interface ITokens {\n  data: IToken[];\n  total: number;\n}\n\n/*export interface ITokens {\n  code: 'OK' | 'ok';\n\tmessage: {\n\t\tresponseCode: 'OK'\n\t\tresponse: IToken[];\n\t}\n}*/\n\nexport interface ITokenService {\n  getTokens(customerId: string, cardId: string): Observable<ITokens>;\n}\n\n@Injectable({\n  providedIn: BusinessApiModule\n})\nexport class TokenService implements ITokenService {\n  token: IToken[];\n  tokens: ITokens;\n  itemsTokens$: Observable<ITokens>;\n  constructor(\n    private httpClient: HttpClient,\n    private config: WalletManagementConfig\n  ) {\n    this.token = [\n      {\n        tokenId: '5f69383669459f5f63709a15',\n        tokenNumber: '5589848000025353',\n        tokenStatus: { statusId: 'A', statusDescripcion: 'Activo' },\n        device: {\n          deviceId: '8UNIEHKFXIYSR1E4PLNYO2-AXPKJ_TJKJEAJXOM6M46UFS4N',\n          deviceNumber: '8882992123',\n          deviceType: 'Celular',\n          deviceDescription: 'samsung!'\n        },\n        wallet: { walleId: '216', walleDescripcion: 'Google Pay' }\n      },\n      {\n        tokenId: '5f69383669459f5f63709a15',\n        tokenNumber: '5589848000026575',\n        tokenStatus: { statusId: 'D', statusDescripcion: 'Borrado' },\n        device: {\n          deviceId: '8UNIEHKFXIYSR1E4PLNYO2-AXPKJ_TJKJEAJXOM6M46UFS4N',\n          deviceNumber: '8882992123',\n          deviceType: 'Celular',\n          deviceDescription: 'samsung!'\n        },\n        wallet: { walleId: '216', walleDescripcion: 'Google Pay' }\n      }\n    ] as IToken[];\n    this.tokens = { data: this.token, total: 1 } as ITokens;\n  }\n\n  getTokens(customerId: string, cardId: string): Observable<ITokens> {\n    if (customerId === null) {\n      return throwError('Customer id is not set');\n    }\n    if (cardId === null) {\n      return throwError('Card id is not set');\n    }\n    this.itemsTokens$ = of(this.tokens);\n    return this.itemsTokens$;\n   // return this.httpClient.get<ITokens>('/customers/${customerId}/${cardId}/card-tokens')\n  }\n}\n","import { MatProgressSpinnerModule } from '@angular/material/progress-spinner'\r\nimport { MatTableModule } from '@angular/material/table'\r\nimport { NgModule } from '@angular/core'\r\n\r\nconst modules = [\r\n  MatTableModule,\r\n  MatProgressSpinnerModule\r\n \r\n] as any[]\r\n\r\n@NgModule({\r\n  exports: modules,\r\n})\r\nexport class TokenMaterialModule {}\r\n","<div style=\"text-align:center\">\n  <h1>\n    Gestion de Tarjetas\n  </h1>\n</div>\n<h4>\n  CustomerId: {{ customerId }}\n</h4>\n<h4>\n  CardID: {{ cardId }}\n</h4>\n<div class=\"mat-elevation-z8\">\n  <div class=\"loading-shade\" *ngIf=\"loading$ | async as loading\">\n    <mat-spinner *ngIf=\"loading\"></mat-spinner>\n    <div class=\"error\" *ngIf=\"hasError\">\n      {{ errorText }}\n    </div>\n  </div>\n  <table mat-table class=\"full-width\" [dataSource]=\"items$ | async\" >\n    <ng-container matColumnDef=\"walletDescripcion\">\n      <th mat-header-cell *matHeaderCellDef > Wallet Descripcion </th>\n      <td mat-cell *matCellDef=\"let row\"> {{ row.wallet.walleDescripcion }} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"deviceType\">\n      <th mat-header-cell *matHeaderCellDef > Device Type </th>\n      <td mat-cell *matCellDef=\"let row\"> {{ row.device.deviceType }} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"deviceDescription\">\n      <th mat-header-cell *matHeaderCellDef > Device Description </th>\n      <td mat-cell *matCellDef=\"let row\"> {{ row.device.deviceDescription }} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"TokenNumber\">\n      <th mat-header-cell *matHeaderCellDef > Token Number </th>\n      <td mat-cell *matCellDef=\"let row\"> {{ row.tokenNumber }}\n      </td>\n    </ng-container>\n      <ng-container matColumnDef=\"tokenStatus\">\n        <th mat-header-cell *matHeaderCellDef > Token Status </th>\n        <td mat-cell *matCellDef=\"let row\"> {{ row.tokenStatus.statusDescripcion }} </td>\n      </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"> </tr>\n  </table>\n\n\n</div>\n","import { ActivatedRoute, ParamMap } from '@angular/router';\nimport {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, merge, of } from 'rxjs';\nimport { ITokens, TokenService } from '../../business-api/token/token.service';\nimport {\n  catchError,\n  debounceTime,\n  map,\n  startWith,\n  switchMap\n} from 'rxjs/operators';\n\nimport { FormControl } from '@angular/forms';\nimport { IToken } from '../../models/token';\nimport { SubSink } from 'subsink';\n\n@Component({\n  selector: 'omnichannel2-commercial-plataform-wallet-management-token-table',\n  templateUrl: './token-table.component.html',\n  styleUrls: ['./token-table.component.css']\n})\nexport class TokenTableComponent implements OnDestroy, AfterViewInit {\n  displayedColumns = [\n    'walletDescripcion',\n    'deviceType',\n    'deviceDescription',\n    'TokenNumber',\n    'tokenStatus'\n  ];\n  items$: Observable<IToken[]>;\n  hasError = false;\n  errorText = '';\n  private skipLoading = false;\n  private subs = new SubSink();\n  useNgRxData = false;\n  readonly isLoadingResults$ = new BehaviorSubject(true);\n  loading$: Observable<boolean>;\n  refresh$ = new Subject();\n\n  constructor(\n    private tokenService: TokenService,\n    private activatedRoute: ActivatedRoute\n  ) {}\n  cardId: string;\n  customerId: string;\n\n  getTokens(customerId: string, cardId: string): Observable<ITokens> {\n    return this.tokenService.getTokens(customerId, cardId);\n  }\n\n  ngOnDestroy(): void {\n    this.subs.unsubscribe();\n  }\n\n  ngAfterViewInit() {\n    this.activatedRoute.paramMap.subscribe((parametros: ParamMap) => {\n      this.cardId = parametros.get('cardId');\n      this.customerId = parametros.get('customerId');\n    });\n\n    if (this.skipLoading) {\n      return;\n    }\n\n    this.items$ = merge(this.refresh$).pipe(\n      startWith({}),\n\n      switchMap(() => {\n        this.isLoadingResults$.next(true);\n        return this.getTokens(this.customerId, this.cardId);\n      }),\n      //map((results: { message: { response: IToken[] } } ) => {\n        map((results: { total: number; data: IToken[] }) => {\n        this.isLoadingResults$.next(false);\n        this.hasError = false;\n        //return results.message.response;\n        return results.data;\n      }),\n      catchError(err => {\n        this.isLoadingResults$.next(false);\n        this.hasError = true;\n        this.errorText = err;\n        return of([]);\n      })\n    );\n    this.items$.subscribe();\n  }\n}\n","import { RouterModule, Routes } from '@angular/router';\n\nimport { BusinessApiModule } from './business-api';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TokenMaterialModule } from './token-material.module';\nimport { TokenTableComponent } from './components';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TokenTableComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BusinessApiModule,\n    TokenMaterialModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TokenTableComponent]\n})\nexport class FrontCommonModule {}\n","export interface IToken {\r\n  tokenId: string\r\n  tokenNumber: string\r\n  tokenStatus: {\r\n    statusId: string\r\n    statusDescripcion: string\r\n  }\r\n  device : {\r\n    deviceId: string\r\n    deviceNumber: string\r\n    deviceType : string\r\n    deviceDescription : string\r\n  }\r\n  wallet : {\r\n    walleId: string\r\n    walleDescripcion: string\r\n  }\r\n}\r\n\r\nexport class Token implements IToken {\r\n  constructor(\r\n    public tokenId = '',\r\n    public tokenNumber = '',\r\n    public tokenStatus = {\r\n      statusId: '',\r\n      statusDescripcion: '',\r\n    },\r\n    public device = {\r\n      deviceId: '',\r\n      deviceNumber: '',\r\n      deviceType : '',\r\n      deviceDescription : '',\r\n    },\r\n    public wallet = {\r\n      walleId: '',\r\n      walleDescripcion: '',\r\n    }\r\n\r\n  ) {}\r\n\r\n  static Build(token: IToken) {\r\n    if (!token) {\r\n      return new Token()\r\n    }\r\n\r\n    return new Token(\r\n      token.tokenId,\r\n      token.tokenNumber,\r\n      token.tokenStatus,\r\n      token.device,\r\n      token.wallet\r\n    )\r\n  }\r\n\r\n\r\n  toJSON(): object {\r\n    const serialized = Object.assign(this)\r\n    return serialized\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["BASE_HTTP_INTERCEPTORS","i0.ɵɵelement","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵtemplate","i0.ɵɵproperty","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd"],"mappings":";;;;;;;;;;;;AAMA;IAGC,qCAAoB,MAA8B;QAA9B,WAAM,GAAN,MAAM,CAAwB;KAAI;IAEtD,+CAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QACjD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC;YACzB,GAAG,EAAM,IAAI,CAAC,MAAM,CAAC,SAAS,uCAAoC,GAAG,CAAC,GAAM;SAC/E,CAAC,CAAC,CAAC;KACJ;0GARW;;sCAPb;CAMA,IAUC;+CATY,2BAA2B;cADvC,UAAU;;;ACEX;IAAA;KAiBC;IAdA,2CAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QACjD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAC3B,QAAQ,CAAC,UAAA,KAAK,IAAI,OAAA,GAAG,CACpB,cAAM,OAAA,KAAK,YAAY,YAAY,GAAA,EACnC,EAAE,CAAC,KAAoC,CAAC,CAAC,IAAI,CAC5C,QAAQ,CAAC,UAAA,QAAQ;;YAChB,OAAA,OAAA,QAAQ,CAAC,IAAI,0CAAE,IAAI,MAAK,IAAI,IAAI,aAAA,QAAQ,CAAC,IAAI,0CAAE,OAAO,0CAAE,YAAY,MAAK,IAAI;gBAC5E,EAAE,CAAC,QAAQ,CAAC,GAAG,UAAU,OAAC,QAAQ,CAAC,IAAI,0CAAE,OAAO,CAAC,SAAS,CAAC,CAAA;SAAA,CAAC,CAC9D,EACD,EAAE,CAAC,KAAK,CAAC,CACT,GAAA,CAAC,CACF,CAAC;KACF;kGAdW;;kCATb;CAQA,IAiBC;+CAhBY,uBAAuB;cADnC,UAAU;;;ACHX;IAAA;QASC,iBAAY,GAAG;YACd,IAAI,OAAO,GAAQ,EAAE,CAAC;YACtB,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;YACxB,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;YACvB,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC;YAC3B,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;YACxB,IAAI,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;gBAC5C,OAAO,CAAC,aAAa,GAAG,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;aAChE;YACD,IAAI,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;gBAC3C,OAAO,CAAC,aAAa,GAAG,SAAS,GAAG,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;aAC3E;YACD,IAAI,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;gBACvC,OAAO,CAAC,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;aACtD;YACD,IAAI,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;gBACvC,OAAO,CAAC,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;aACrD;YACD,OAAO,OAAO,CAAC;SACf,CAAA;KACD;IA1BA,6CAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QACjD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC;YAC5B,UAAU,EAAE,IAAI,CAAC,YAAY,EAAE;SAC/B,CAAC,CAAC,CAAC;KACJ;sGANW;;oCANb;CAKA,IA6BC;+CA5BY,yBAAyB;cADrC,UAAU;;;ACGJ,IAAM,iBAAiB,GAAG,IAAI,cAAc,CAAoB,mBAAmB,CAAC,CAAC;AAGrF,IAAM,sBAAsB,GAAe,CAAC;QAClD,OAAO,EAAE,iBAAiB;QAC1B,KAAK,EAAE,IAAI;QACX,QAAQ,EAAE,2BAA2B;KACrC,EAAE;QACF,OAAO,EAAE,iBAAiB;QAC1B,KAAK,EAAE,IAAI;QACX,QAAQ,EAAE,yBAAyB;KACnC,EAAE;QACF,OAAO,EAAE,iBAAiB;QAC1B,KAAK,EAAE,IAAI;QACX,QAAQ,EAAE,uBAAuB;KACjC,CAAC;;;ICjBF;KAkBkC;uEAAJ;kHAAjB;gBAhBX,OAAO,EAAE,UAAU;gBACnB,QAAQ,EAAE,UAAU;aACpB,EAAE;gBACF,OAAO,EAAE,WAAW;gBACpB,QAAQ,EAAE,wBAAwB;aAClC,EAAE;gBACF,OAAO,EAAEA,mBAAsB;gBAC/B,IAAI,EAAE,CAAC,QAAQ,EAAE,iBAAiB,CAAC;gBACnC,UAAU,GAAE,UAAC,QAAQ,EAAE,YAAY,IAAK,gBACpC,YAAY,EACZ,QAAQ,CAAC,MAAM,CAAC,GAAG,CAACA,mBAAsB,CAAC,IAC9C,CAAA;aACD,GACE,sBAAsB;4BArB1B;CAMA,IAkBkC;+CAArB,iBAAiB;cAlB7B,QAAQ;eAAC;gBACT,SAAS,YAAG;wBACX,OAAO,EAAE,UAAU;wBACnB,QAAQ,EAAE,UAAU;qBACpB,EAAE;wBACF,OAAO,EAAE,WAAW;wBACpB,QAAQ,EAAE,wBAAwB;qBAClC,EAAE;wBACF,OAAO,EAAEA,mBAAsB;wBAC/B,IAAI,EAAE,CAAC,QAAQ,EAAE,iBAAiB,CAAC;wBACnC,UAAU,GAAE,UAAC,QAAQ,EAAE,YAAY,IAAK,gBACpC,YAAY,EACZ,QAAQ,CAAC,MAAM,CAAC,GAAG,CAACA,mBAAsB,CAAC,IAC9C,CAAA;qBACD,GACE,sBAAsB,CACxB;aACD;;;;ICUC,sBACU,UAAsB,EACtB,MAA8B;QAD9B,eAAU,GAAV,UAAU,CAAY;QACtB,WAAM,GAAN,MAAM,CAAwB;QAEtC,IAAI,CAAC,KAAK,GAAG;YACX;gBACE,OAAO,EAAE,0BAA0B;gBACnC,WAAW,EAAE,kBAAkB;gBAC/B,WAAW,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,iBAAiB,EAAE,QAAQ,EAAE;gBAC3D,MAAM,EAAE;oBACN,QAAQ,EAAE,kDAAkD;oBAC5D,YAAY,EAAE,YAAY;oBAC1B,UAAU,EAAE,SAAS;oBACrB,iBAAiB,EAAE,UAAU;iBAC9B;gBACD,MAAM,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,gBAAgB,EAAE,YAAY,EAAE;aAC3D;YACD;gBACE,OAAO,EAAE,0BAA0B;gBACnC,WAAW,EAAE,kBAAkB;gBAC/B,WAAW,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,iBAAiB,EAAE,SAAS,EAAE;gBAC5D,MAAM,EAAE;oBACN,QAAQ,EAAE,kDAAkD;oBAC5D,YAAY,EAAE,YAAY;oBAC1B,UAAU,EAAE,SAAS;oBACrB,iBAAiB,EAAE,UAAU;iBAC9B;gBACD,MAAM,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,gBAAgB,EAAE,YAAY,EAAE;aAC3D;SACU,CAAC;QACd,IAAI,CAAC,MAAM,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAa,CAAC;KACzD;IAED,gCAAS,GAAT,UAAU,UAAkB,EAAE,MAAc;QAC1C,IAAI,UAAU,KAAK,IAAI,EAAE;YACvB,OAAO,UAAU,CAAC,wBAAwB,CAAC,CAAC;SAC7C;QACD,IAAI,MAAM,KAAK,IAAI,EAAE;YACnB,OAAO,UAAU,CAAC,oBAAoB,CAAC,CAAC;SACzC;QACD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC,YAAY,CAAC;;KAE1B;4EA/CU;iEAAY,0CAFX,iBAAiB;uBA3B/B;CA0BA,IAmDC;+CAhDY,YAAY;cAHxB,UAAU;eAAC;gBACV,UAAU,EAAE,iBAAiB;aAC9B;;;ACxBD,IAAM,OAAO,GAAG;IACd,cAAc;IACd,wBAAwB;CAEhB,CAAA;;IAEV;KAGmC;2EAAH;sHAAnB,mBAAmB;YAP9B,wBAAwB;8BAN1B;CAUA,IAGmC;qFAAtB,mBAAmB,cAR9B,cAAc;QACd,wBAAwB;+CAOb,mBAAmB;cAH/B,QAAQ;eAAC;gBACR,OAAO,EAAE,OAAO;aACjB;;;;ICCGC,2BAA2C;;;IAC3CC,4BACE;IAAAC,SACF;IAAAC,cAAM;;;IADJC,YACF;IADEC,+CACF;;;IAJFJ,4BACE;IAAAK,wFAA6B;IAC7BA,wEACE;IAEJH,cAAM;;;;IAJSC,YAAe;IAAfG,+BAAe;IACTH,YAAgB;IAAhBG,oCAAgB;;;IAMjCN,2BAAwC;IAAAC,iCAAmB;IAAAC,cAAK;;;IAChEF,2BAAoC;IAAAC,SAAkC;IAAAC,cAAK;;;IAAvCC,YAAkC;IAAlCC,6DAAkC;;;IAGtEJ,2BAAwC;IAAAC,0BAAY;IAAAC,cAAK;;;IACzDF,2BAAoC;IAAAC,SAA4B;IAAAC,cAAK;;;IAAjCC,YAA4B;IAA5BC,uDAA4B;;;IAGhEJ,2BAAwC;IAAAC,iCAAmB;IAAAC,cAAK;;;IAChEF,2BAAoC;IAAAC,SAAmC;IAAAC,cAAK;;;IAAxCC,YAAmC;IAAnCC,8DAAmC;;;IAGvEJ,2BAAwC;IAAAC,2BAAa;IAAAC,cAAK;;;IAC1DF,2BAAoC;IAAAC,SACpC;IAAAC,cAAK;;;IAD+BC,YACpC;IADoCC,iDACpC;;;IAGEJ,2BAAwC;IAAAC,2BAAa;IAAAC,cAAK;;;IAC1DF,2BAAoC;IAAAC,SAAwC;IAAAC,cAAK;;;IAA7CC,YAAwC;IAAxCC,mEAAwC;;;IAGhFL,sBAA4D;;;IAC5DA,sBAAkE;;;ICGpE,6BACU,YAA0B,EAC1B,cAA8B;QAD9B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAnBxC,qBAAgB,GAAG;YACjB,mBAAmB;YACnB,YAAY;YACZ,mBAAmB;YACnB,aAAa;YACb,aAAa;SACd,CAAC;QAEF,aAAQ,GAAG,KAAK,CAAC;QACjB,cAAS,GAAG,EAAE,CAAC;QACP,gBAAW,GAAG,KAAK,CAAC;QACpB,SAAI,GAAG,IAAI,OAAO,EAAE,CAAC;QAC7B,gBAAW,GAAG,KAAK,CAAC;QACX,sBAAiB,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAEvD,aAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;KAKrB;IAIJ,uCAAS,GAAT,UAAU,UAAkB,EAAE,MAAc;QAC1C,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;KACxD;IAED,yCAAW,GAAX;QACE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;KACzB;IAED,6CAAe,GAAf;QAAA,iBAgCC;QA/BC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,UAAoB;YAC1D,KAAI,CAAC,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACvC,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;SAChD,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,OAAO;SACR;QAED,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CACrC,SAAS,CAAC,EAAE,CAAC,EAEb,SAAS,CAAC;YACR,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClC,OAAO,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,UAAU,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;SACrD,CAAC;;QAEA,GAAG,CAAC,UAAC,OAA0C;YAC/C,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnC,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;;YAEtB,OAAO,OAAO,CAAC,IAAI,CAAC;SACrB,CAAC,EACF,UAAU,CAAC,UAAA,GAAG;YACZ,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YACrB,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;SACf,CAAC,CACH,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;KACzB;0FAjEU,mBAAmB;4EAAA;YD3BhCC,2BACE;YAAAA,uBACE;YAAAC,kCACF;YAAAC,cAAK;YACPA,cAAM;YACNF,uBACE;YAAAC,SACF;YAAAC,cAAK;YACLF,uBACE;YAAAC,SACF;YAAAC,cAAK;YACLF,2BACE;YAAAK,iEACE;;YAKFL,8BACE;;YAAAO,8BACE;YAAAF,iEAAwC;YACxCA,iEAAoC;YACtCG,uBAAe;YACfD,8BACE;YAAAF,iEAAwC;YACxCA,iEAAoC;YACtCG,uBAAe;YACfD,8BACE;YAAAF,iEAAwC;YACxCA,iEAAoC;YACtCG,uBAAe;YACfD,8BACE;YAAAF,iEAAwC;YACxCA,iEAAoC;YAEtCG,uBAAe;YACbD,+BACE;YAAAF,iEAAwC;YACxCA,iEAAoC;YACtCG,uBAAe;YAEjBH,kEAAuD;YACvDA,kEAA6D;YAC/DH,cAAQ;YAGVA,cAAM;;YAxCJC,YACF;YADEC,yDACF;YAEED,YACF;YADEC,iDACF;YAE6BD,YAAmC;YAAnCG,mDAAmC;YAM1BH,YAA6B;YAA7BG,wDAA6B;YAuB5CH,aAAmC;YAAnCG,mDAAmC;YAC1CH,YAA+C;YAA/CG,oDAA+C;;8BC1C/D;CAsBA,IAuEC;+CAlEY,mBAAmB;cAL/B,SAAS;eAAC;gBACT,QAAQ,EAAE,iEAAiE;gBAC3E,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;AClBD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mBAAmB;KAC/B;CACF,CAAC;;IAEF;KASiC;uEAAH;kHAAjB;gBAPT,YAAY;gBACZ,iBAAiB;gBACjB,mBAAmB;gBACnB,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;4BArBH;CAeA,IASiC;qFAApB,iBAAiB,mBAFb,mBAAmB,aALhC,YAAY;QACZ,iBAAiB;QACjB,mBAAmB;+CAKV,iBAAiB;cAT7B,QAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,iBAAiB;oBACjB,mBAAmB;oBACnB,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;iBAC9B;gBACD,YAAY,EAAE,CAAC,mBAAmB,CAAC;aACpC;;;;ICHC,eACS,OAAY,EACZ,WAAgB,EAChB,WAGN,EACM,MAKN,EACM,MAGN;QAfM,wBAAA,EAAA,YAAY;QACZ,4BAAA,EAAA,gBAAgB;QAChB,4BAAA,EAAA;YACL,QAAQ,EAAE,EAAE;YACZ,iBAAiB,EAAE,EAAE;SACtB;QACM,uBAAA,EAAA;YACL,QAAQ,EAAE,EAAE;YACZ,YAAY,EAAE,EAAE;YAChB,UAAU,EAAG,EAAE;YACf,iBAAiB,EAAG,EAAE;SACvB;QACM,uBAAA,EAAA;YACL,OAAO,EAAE,EAAE;YACX,gBAAgB,EAAE,EAAE;SACrB;QAfM,YAAO,GAAP,OAAO,CAAK;QACZ,gBAAW,GAAX,WAAW,CAAK;QAChB,gBAAW,GAAX,WAAW,CAGjB;QACM,WAAM,GAAN,MAAM,CAKZ;QACM,WAAM,GAAN,MAAM,CAGZ;KAEC;IAEG,WAAK,GAAZ,UAAa,KAAa;QACxB,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,IAAI,KAAK,EAAE,CAAA;SACnB;QAED,OAAO,IAAI,KAAK,CACd,KAAK,CAAC,OAAO,EACb,KAAK,CAAC,WAAW,EACjB,KAAK,CAAC,WAAW,EACjB,KAAK,CAAC,MAAM,EACZ,KAAK,CAAC,MAAM,CACb,CAAA;KACF;IAGD,sBAAM,GAAN;QACE,IAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;QACtC,OAAO,UAAU,CAAA;KAClB;IACH,YAAC;AAAD,CAAC;;AC3DD;;;;;;"}