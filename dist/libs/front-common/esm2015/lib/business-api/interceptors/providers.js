import { InjectionToken } from '@angular/core';
import { EndpointResolverInterceptor } from './endpoint-resolver.interceptor';
import { ErrorHandlerInterceptor } from './error-handler.interceptor';
import { BackendHeadersInterceptor } from './backend-headers.interceptor';
export const HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');
export const INTERCEPTORS_PROVIDERS = [{
        provide: HTTP_INTERCEPTORS,
        multi: true,
        useClass: EndpointResolverInterceptor
    }, {
        provide: HTTP_INTERCEPTORS,
        multi: true,
        useClass: BackendHeadersInterceptor
    }, {
        provide: HTTP_INTERCEPTORS,
        multi: true,
        useClass: ErrorHandlerInterceptor
    }];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZXJzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG9tbmljaGFubmVsMi1jb21tZXJjaWFsLXBsYXRhZm9ybS13YWxsZXQtbWFuYWdlbWVudC9mcm9udC1jb21tb24vIiwic291cmNlcyI6WyJsaWIvYnVzaW5lc3MtYXBpL2ludGVyY2VwdG9ycy9wcm92aWRlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBWSxNQUFNLGVBQWUsQ0FBQztBQUd6RCxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUM5RSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN0RSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUcxRSxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxJQUFJLGNBQWMsQ0FBb0IsbUJBQW1CLENBQUMsQ0FBQztBQUc1RixNQUFNLENBQUMsTUFBTSxzQkFBc0IsR0FBZSxDQUFDO1FBQ2xELE9BQU8sRUFBRSxpQkFBaUI7UUFDMUIsS0FBSyxFQUFFLElBQUk7UUFDWCxRQUFRLEVBQUUsMkJBQTJCO0tBQ3JDLEVBQUU7UUFDRixPQUFPLEVBQUUsaUJBQWlCO1FBQzFCLEtBQUssRUFBRSxJQUFJO1FBQ1gsUUFBUSxFQUFFLHlCQUF5QjtLQUNuQyxFQUFFO1FBQ0YsT0FBTyxFQUFFLGlCQUFpQjtRQUMxQixLQUFLLEVBQUUsSUFBSTtRQUNYLFFBQVEsRUFBRSx1QkFBdUI7S0FDakMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4sIFByb3ZpZGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEh0dHBJbnRlcmNlcHRvciB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuXHJcbmltcG9ydCB7IEVuZHBvaW50UmVzb2x2ZXJJbnRlcmNlcHRvciB9IGZyb20gJy4vZW5kcG9pbnQtcmVzb2x2ZXIuaW50ZXJjZXB0b3InO1xyXG5pbXBvcnQgeyBFcnJvckhhbmRsZXJJbnRlcmNlcHRvciB9IGZyb20gJy4vZXJyb3ItaGFuZGxlci5pbnRlcmNlcHRvcic7XHJcbmltcG9ydCB7IEJhY2tlbmRIZWFkZXJzSW50ZXJjZXB0b3IgfSBmcm9tICcuL2JhY2tlbmQtaGVhZGVycy5pbnRlcmNlcHRvcic7XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IEhUVFBfSU5URVJDRVBUT1JTID0gbmV3IEluamVjdGlvblRva2VuPEh0dHBJbnRlcmNlcHRvcltdPignSFRUUF9JTlRFUkNFUFRPUlMnKTtcclxuXHJcblxyXG5leHBvcnQgY29uc3QgSU5URVJDRVBUT1JTX1BST1ZJREVSUzogUHJvdmlkZXJbXSA9IFt7XHJcblx0cHJvdmlkZTogSFRUUF9JTlRFUkNFUFRPUlMsXHJcblx0bXVsdGk6IHRydWUsXHJcblx0dXNlQ2xhc3M6IEVuZHBvaW50UmVzb2x2ZXJJbnRlcmNlcHRvclxyXG59LCB7XHJcblx0cHJvdmlkZTogSFRUUF9JTlRFUkNFUFRPUlMsXHJcblx0bXVsdGk6IHRydWUsXHJcblx0dXNlQ2xhc3M6IEJhY2tlbmRIZWFkZXJzSW50ZXJjZXB0b3JcclxufSwge1xyXG5cdHByb3ZpZGU6IEhUVFBfSU5URVJDRVBUT1JTLFxyXG5cdG11bHRpOiB0cnVlLFxyXG5cdHVzZUNsYXNzOiBFcnJvckhhbmRsZXJJbnRlcmNlcHRvclxyXG59XTtcclxuIl19