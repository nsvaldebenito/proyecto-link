{"version":3,"sources":["C:/Users/n_sol/dev/monorepo-wallet/omnichannel2-commercial-plataform-wallet-management/dist/libs/front-bfcl/fesm2015/omnichannel2-commercial-plataform-wallet-management-front-bfcl-lazy.js","C:/Users/n_sol/dev/monorepo-wallet/omnichannel2-commercial-plataform-wallet-management/dist/libs/front-common/fesm2015/omnichannel2-commercial-plataform-wallet-management-front-common-config.js","./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/interceptors/app.interceptor.ts","./src/app/interceptors/providers.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsG;AACoB;AACN;AACrE;;AAE/C;AACA;AACA,yDAAyD,sEAAgB,EAAE,uCAAuC;AAClH,yDAAyD,sEAAgB,EAAE,8DAA8D,oDAAoD,EAAE;AAC/L,YAAY,4DAAY;AACxB,0BAA0B,mHAAU;AACpC,wCAAwC,6XAAyE;AACjH,iBAAiB;AACjB,YAAY;AACZ,cAAc,oDAAoD,wEAAkB,kCAAkC,WAAW,4DAAY,GAAG,EAAE,EAAE;AACpJ,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,sDAAQ;AACtB;AACA;AACA,oBAAoB,4DAAY;AAChC,kCAAkC,mHAAU;AAC5C,iDAAiD,6XAAyE;AAC1H,yBAAyB;AACzB;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;;AAE0C;AAC1C;;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6G;AAC7G;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAA0C;;;AAQnC,MAAM,YAAY;IACxB;QACC,cAAc,CAAC,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;QAC/C,cAAc,CAAC,OAAO,CAAC,8BAA8B,EAAE,YAAY,CAAC,CAAC;QACrE,cAAc,CAAC,OAAO,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;QACtD,cAAc,CAAC,OAAO,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;QACtD,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACzC,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;QAC/C,cAAc,CAAC,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;IACjD,CAAC;;wEATW,YAAY;4FAAZ,YAAY;QCRzB,2EAA+B;;6FDQlB,YAAY;cANxB,uDAAS;eAAC;gBACV,QAAQ,EAAE,0DAA0D;gBACnE,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aAEnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsJ;AAEvG;AACW;AAEZ;AACU;AACU;AACzB;AACM;AACY;AACjB;;;;;;AAyBnC,MAAM,SAAS;;wFAAT,SAAS,cAFT,2DAAY;4IAEZ,SAAS,mBANV;QACR,GAAG,8EAAsB;QACzB,2IAA8B,CAAC,EAAE,SAAS,EAAE,wBAAwB,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC;KAC5F,YAjBM;YACN,uEAAa;YACf,qEAAgB;YAChB,4DAAY,CAAC,OAAO,CAAC,CAAC;oBACrB,IAAI,EAAE,EAAE;oBACR,YAAY,EAAE,GAAG,EAAE,CAAC,mIAA8B;iBAClD,CAAC,EAAC;gBACF,iBAAiB,EAAE,SAAS;gBAC5B,mBAAmB,EAAE,QAAQ;aAC7B,CAAC;YACF,uDAAW,CAAC,OAAO,CAAC,EAAE,CAAC;YACvB,2DAAa,CAAC,OAAO,CAAC,EAAE,CAAC;YACzB,wEAAmB,CAAC,UAAU,EAAE;SAChC;mIAOW,SAAS,mBArBN,2DAAY,aAExB,uEAAa;QACf,qEAAgB;6FAkBL,SAAS;cAtBrB,sDAAQ;eAAC;gBACT,YAAY,EAAE,CAAC,2DAAY,CAAC;gBAC5B,OAAO,EAAE;oBACN,uEAAa;oBACf,qEAAgB;oBAChB,4DAAY,CAAC,OAAO,CAAC,CAAC;4BACrB,IAAI,EAAE,EAAE;4BACR,YAAY,EAAE,GAAG,EAAE,CAAC,mIAA8B;yBAClD,CAAC,EAAC;wBACF,iBAAiB,EAAE,SAAS;wBAC5B,mBAAmB,EAAE,QAAQ;qBAC7B,CAAC;oBACF,uDAAW,CAAC,OAAO,CAAC,EAAE,CAAC;oBACvB,2DAAa,CAAC,OAAO,CAAC,EAAE,CAAC;oBACzB,wEAAmB,CAAC,UAAU,EAAE;iBAChC;gBACD,SAAS,EAAE;oBACR,GAAG,8EAAsB;oBACzB,2IAA8B,CAAC,EAAE,SAAS,EAAE,wBAAwB,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC;iBAC5F;gBACH,SAAS,EAAE,CAAC,2DAAY,CAAC;aACzB;;;;;;;;;;;;;;AC/BD;AAAA;AAAO,MAAM,cAAc;IAE1B,SAAS,CAAC,GAAqB,EAAE,IAAiB;QACjD,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,OAAO,CAAE,EAAC,CAAC,CAAC;QACvE,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;IACxB,CAAC;CACD;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAyD;AACN;AAG5C,MAAM,sBAAsB,GAAe,CAAC;QAClD,OAAO,EAAE,sEAAiB;QAC1B,KAAK,EAAE,IAAI;QACX,QAAQ,EAAE,+DAAc;KACxB,CAAC,CAAC;;;;;;;;;;;;;ACTH;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBACN,CAAC,0DAAU;KAC1B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["import { BASE_ROUTE } from '@omnichannel2-commercial-plataform-wallet-management/front-common/config';\nexport { walletManagementConfigProvider } from '@omnichannel2-commercial-plataform-wallet-management/front-common/config';\nimport { ɵɵdefineNgModule, ɵɵdefineInjector, ɵɵsetNgModuleScope, ɵsetClassMetadata, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nclass WalletManagementBfclModuleLazy {\r\n}\r\n/** @nocollapse */ WalletManagementBfclModuleLazy.ɵmod = ɵɵdefineNgModule({ type: WalletManagementBfclModuleLazy });\r\n/** @nocollapse */ WalletManagementBfclModuleLazy.ɵinj = ɵɵdefineInjector({ factory: function WalletManagementBfclModuleLazy_Factory(t) { return new (t || WalletManagementBfclModuleLazy)(); }, imports: [[\r\n            RouterModule.forChild([{\r\n                    path: BASE_ROUTE.concat('/:customerId/:cardId'),\r\n                    loadChildren: () => import('@omnichannel2-commercial-plataform-wallet-management/front-bfcl').then(m => m.WalletManagementBfclModule.forLazy())\r\n                }])\r\n        ]] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵɵsetNgModuleScope(WalletManagementBfclModuleLazy, { imports: [RouterModule] }); })();\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(WalletManagementBfclModuleLazy, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    RouterModule.forChild([{\r\n                            path: BASE_ROUTE.concat('/:customerId/:cardId'),\r\n                            loadChildren: (() => import('@omnichannel2-commercial-plataform-wallet-management/front-bfcl').then((m => m.WalletManagementBfclModule.forLazy())))\r\n                        }])\r\n                ]\r\n            }]\r\n    }], null, null); })();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { WalletManagementBfclModuleLazy };\n//# sourceMappingURL=omnichannel2-commercial-plataform-wallet-management-front-bfcl-lazy.js.map\n","class WalletManagementConfig {\r\n}\n\nconst WalletManagementDefaultConfig = {\r\n    apiDomain: '',\r\n    enableClient: false\r\n};\n\nconst BASE_ROUTE = 'wallet/token';\n\nfunction walletManagementConfigProvider(config = WalletManagementDefaultConfig) {\r\n    return {\r\n        provide: WalletManagementConfig,\r\n        useValue: config\r\n    };\r\n}\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { BASE_ROUTE, WalletManagementConfig, WalletManagementDefaultConfig, walletManagementConfigProvider };\n//# sourceMappingURL=omnichannel2-commercial-plataform-wallet-management-front-common-config.js.map\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'omnichannel2-commercial-plataform-wallet-management-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n\r\n})\r\nexport class AppComponent {\r\n\tconstructor(){\r\n\t\tsessionStorage.setItem('access_token', '1234');\r\n\t\tsessionStorage.setItem('customerIdentificationNumber', '11111111-1');\r\n\t\tsessionStorage.setItem('executiveCode', '11111111-1');\r\n\t\tsessionStorage.setItem('executiveCode', '11111111-1');\r\n\t\tsessionStorage.setItem('officeId', '90');\r\n\t\tsessionStorage.setItem('username', 'username');\r\n\t\tsessionStorage.setItem('isCallCenter', 'false');\r\n\t}\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { WalletManagementBfclModuleLazy, walletManagementConfigProvider } from '@omnichannel2-commercial-plataform-wallet-management/front-bfcl/lazy';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { INTERCEPTORS_PROVIDERS } from './interceptors/providers';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { environment } from '../environments/environment';\r\n\r\n@NgModule({\r\n\tdeclarations: [AppComponent],\r\n\timports: [\r\n    BrowserModule,\r\n\t\tHttpClientModule,\r\n\t\tRouterModule.forRoot([{\r\n\t\t\tpath: '',\r\n\t\t\tloadChildren: () => WalletManagementBfclModuleLazy\r\n\t\t}],{\r\n\t\t\tinitialNavigation: 'enabled',\r\n\t\t\tonSameUrlNavigation: 'reload'\r\n\t\t}),\r\n\t\tStoreModule.forRoot({}),\r\n\t\tEffectsModule.forRoot([]),\r\n\t\tStoreDevtoolsModule.instrument()\r\n\t],\r\n\tproviders: [\r\n    ...INTERCEPTORS_PROVIDERS,\r\n    walletManagementConfigProvider({ apiDomain: 'http://localhost:10169', enableClient: false })\r\n  \t],\r\n\tbootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\nexport class AppInterceptor implements HttpInterceptor {\r\n\r\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\t\treq = req.clone({ headers: req.headers.set('autorization', 'mykey' )});\r\n\t\treturn next.handle(req)\r\n\t}\r\n}\r\n","import { Provider } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppInterceptor } from './app.interceptor';\r\n\r\n\r\nexport const INTERCEPTORS_PROVIDERS: Provider[] = [{\r\n\tprovide: HTTP_INTERCEPTORS,\r\n\tmulti: true,\r\n\tuseClass: AppInterceptor\r\n}];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}